[gd_scene load_steps=76 format=2]

[ext_resource path="res://Assets/Sounds/Story/introControl.wav" type="AudioStream" id=1]
[ext_resource path="res://StoryTelling.tscn" type="PackedScene" id=2]
[ext_resource path="res://Assets/Sounds/Story/spaceJump.wav" type="AudioStream" id=3]
[ext_resource path="res://Assets/Sounds/Story/onlyCommunicateSignal.wav" type="AudioStream" id=4]
[ext_resource path="res://Assets/Fonts/robot.ttf" type="DynamicFontData" id=5]
[ext_resource path="res://Assets/Sprites/robot.png" type="Texture" id=6]
[ext_resource path="res://Assets/Background/Color.png" type="Texture" id=7]
[ext_resource path="res://Checkpoint.tscn" type="PackedScene" id=8]
[ext_resource path="res://Player.tscn" type="PackedScene" id=9]
[ext_resource path="res://Emitter.tscn" type="PackedScene" id=10]
[ext_resource path="res://UI.tscn" type="PackedScene" id=11]
[ext_resource path="res://Assets/Sounds/Story/dontPressRestart.wav" type="AudioStream" id=12]
[ext_resource path="res://Assets/Sounds/Story/jumpPit.wav" type="AudioStream" id=13]
[ext_resource path="res://Assets/Sounds/Story/tyForPlaying.wav" type="AudioStream" id=14]
[ext_resource path="res://Assets/Sounds/Story/toilet.wav" type="AudioStream" id=15]
[ext_resource path="res://Assets/Sounds/Story/whySentience.wav" type="AudioStream" id=16]
[ext_resource path="res://Assets/Sounds/Story/portal.wav" type="AudioStream" id=17]
[ext_resource path="res://PlayerSprite.tscn" type="PackedScene" id=18]
[ext_resource path="res://Assets/Sounds/Story/instructions.wav" type="AudioStream" id=19]
[ext_resource path="res://Assets/Sounds/Story/qEmptyMemory.wav" type="AudioStream" id=20]

[sub_resource type="Shader" id=1]
code = "/*
	Port of libretro's crt-geom.glsl to Godot shading language.
	Source: https://github.com/libretro/glsl-shaders/blob/master/crt/shaders/crt-geom.glsl
	
	This program is free software; you can redistribute it and/or modify it
	under the terms of the GNU General Public License as published by the Free
	Software Foundation; either version 2 of the License, or (at your option)
	any later version.
*/

shader_type canvas_item;
render_mode blend_mix;

// CRTGeom Target Gamma
uniform float CRTgamma: hint_range(0.1, 5.0, 0.1) = 2.4; // hola

// CRTGeom Monitor Gamma
uniform float monitorgamma: hint_range(0.1, 5.0, 0.1) = 2.2;

// CRTGeom Distance
uniform float d: hint_range(0.1, 3.0, 0.1) = 1.6;

// CRTGeom Curvature Toggle
uniform float CURVATURE: hint_range(0.0, 1.0, 1.0) = 1.0;

// CRTGeom Curvature Radius
uniform float R: hint_range(0.1, 10.0, 0.1) = 2.0;

// CRTGeom Corner Size
uniform float cornersize: hint_range(0.001, 1.0, 0.005) = 0.03;

// CRTGeom Corner Smoothness
uniform float cornersmooth: hint_range(80.0, 2000.0, 100.0) = 1000.0;

// CRTGeom Horizontal Tilt
uniform float x_tilt: hint_range(-0.5, 0.5, 0.05) = 0.0;

// CRTGeom Vertical Tilt
uniform float y_tilt: hint_range(-0.5, 0.5, 0.05) = 0.0;

// CRTGeom Horiz. Overscan %
uniform float overscan_x: hint_range(-125.0, 125.0, 1.0) = 100.0;

// CRTGeom Vert. Overscan %
uniform float overscan_y: hint_range(-125.0, 125.0, 1.0) = 100.0;

// CRTGeom Dot Mask Toggle
uniform float DOTMASK: hint_range(0.0, 0.3, 0.3) = 0.3;

// CRTGeom Sharpness
uniform float SHARPER: hint_range(1.0, 3.0, 1.0) = 1.0;

// CRTGeom Scanline Weight
uniform float scanline_weight: hint_range(0.1, 0.5, 0.05) = 0.3;

// CRTGeom Luminance
uniform float lum: hint_range(0.0, 0.1, 0.01) = 0.0;

// CRTGeom Interlacing Simulation
uniform float interlace_detect: hint_range(0.0, 1.0, 1.0) = 1.0;

uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
uniform int FrameCount;
//uniform int FrameDirection; // not used

varying vec2 overscan;
varying vec2 aspect;
varying vec3 stretch;
varying vec2 sinangle;
varying vec2 cosangle;
varying vec2 one;
varying float mod_factor;
varying vec2 ilfac;

/*
NOTE: Godot shading language does not support \"\"#define\", so \"FIX(c)\"
has been inlined where used, and commented accordingly.
*/
//#define FIX(c) max(abs(c), 1e-5);

float intersect(vec2 xy) {
	float A = dot(xy,xy)+d*d;
	float B = 2.0*(R*(dot(xy,sinangle)-d*cosangle.x*cosangle.y)-d*d);
	float C = d*d + 2.0*R*d*cosangle.x*cosangle.y;
	return (-B-sqrt(B*B-4.0*A*C))/(2.0*A);
}

vec2 bkwtrans(vec2 xy) {
	float c = intersect(xy);
	vec2 point = vec2(c)*xy;
	point -= vec2(-R)*sinangle;
	point /= vec2(R);
	vec2 tang = sinangle/cosangle;
	vec2 poc = point/cosangle;
	float A = dot(tang,tang)+1.0;
	float B = -2.0*dot(poc,tang);
	float C = dot(poc,poc)-1.0;
	float a = (-B+sqrt(B*B-4.0*A*C))/(2.0*A);
	vec2 uv = (point-a*sinangle)/cosangle;
	float r = max(abs( R*acos(a) ), 1e-5); // FIX(R*acos(a))
	return uv*r/sin(r/R);
}

vec2 fwtrans(vec2 uv) {
	float r = max(abs( sqrt(dot(uv,uv)) ), 1e-5); // FIX(sqrt(dot(uv,uv)))
	uv *= sin(r/R)/r;
	float x = 1.0-cos(r/R);
	float D = d/R + x*cosangle.x*cosangle.y+dot(uv,sinangle);
	return d*(uv*cosangle-x*sinangle)/D;
}

vec3 maxscale() {
	vec2 c = bkwtrans(-R * sinangle / (1.0 + R/d*cosangle.x*cosangle.y));
	vec2 a = vec2(0.5,0.5)*aspect;
	vec2 lo = vec2(fwtrans(vec2(-a.x,c.y)).x, fwtrans(vec2(c.x,-a.y)).y)/aspect;
	vec2 hi = vec2(fwtrans(vec2(+a.x,c.y)).x, fwtrans(vec2(c.x,+a.y)).y)/aspect;
	return vec3((hi+lo)*aspect*0.5,max(hi.x-lo.x,hi.y-lo.y));
}


void vertex() {
	// START of parameters
	
	// gamma of simulated CRT
	//CRTgamma = 1.8;
	
	// gamma of display monitor (typically 2.2 is correct)
	//monitorgamma = 2.2;
	
	// overscan (e.g. 1.02 for 2% overscan)
	overscan = vec2(1.00,1.00);
	
	// aspect ratio
	aspect = vec2(1.0, 0.75);
	
	// lengths are measured in units of (approximately) the width
	// of the monitor simulated distance from viewer to monitor
	//d = 2.0;
	
	// radius of curvature
	//R = 1.5;
	
	// tilt angle in radians
	// (behavior might be a bit wrong if both components are
	// nonzero)
	const vec2 angle = vec2(0.0, 0.0);
	
	// size of curved corners
	//cornersize = 0.03;
	
	// border smoothness parameter
	// decrease if borders are too aliased
	//cornersmooth = 1000.0;
	
	// END of parameters
	
	// Precalculate a bunch of useful values we'll need in the fragment
	// shader.
	sinangle = sin(vec2(x_tilt, y_tilt)) + vec2(0.001);//sin(vec2(max(abs(x_tilt), 1e-3), max(abs(y_tilt), 1e-3)));
	cosangle = cos(vec2(x_tilt, y_tilt)) + vec2(0.001);//cos(vec2(max(abs(x_tilt), 1e-3), max(abs(y_tilt), 1e-3)));
	stretch = maxscale();
	
	ilfac = vec2(1.0,clamp(floor(InputSize.y/200.0), 1.0, 2.0));
	
	// The size of one texel, in texture-coordinates.
	vec2 sharpTextureSize = vec2(SHARPER * TextureSize.x, TextureSize.y);
	one = ilfac / sharpTextureSize;
	
	// Resulting X pixel-coordinate of the pixel we're drawing.
	mod_factor = UV.x * TextureSize.x * OutputSize.x / InputSize.x;
}

/*
NOTE: Godot shading language does not support \"\"#define\", so these ones
must be commented/uncommented in the corresponding \"#ifdef\"/\"#ifNdef\" sections.
*/

// Enable interpolation in linear gamma (disable for gain speed).
// Default in original GLSL source: enabled
//#define LINEAR_PROCESSING

// Enable 3x oversampling of the beam profile
// Default in original GLSL source: enabled
//#define OVERSAMPLE

// Use the older, purely gaussian beam profile
// Default in original GLSL source: disabled
//#define USEGAUSSIAN

const float PI = 3.141592653589;

/*
NOTE: Godot shading language does not support \"\"#define\", so \"TEX2D(c)\"
has been inlined and enclosed in corresponding \"\"#ifdef LINEAR_PROCESSING\"
blocks.
*/

//#ifdef LINEAR_PROCESSING
//#define TEX2D(c) pow(COMPAT_TEXTURE(Texture, (c)), vec4(CRTgamma))
//#else
//#define TEX2D(c) COMPAT_TEXTURE(Texture, (c))
//#endif

vec2 transform(vec2 coord) {
	coord *= TextureSize / InputSize;
	coord = (coord-vec2(0.5))*aspect*stretch.z+stretch.xy;
	return (bkwtrans(coord)/vec2(overscan_x / 100.0, overscan_y / 100.0)/aspect+vec2(0.5)) * InputSize / TextureSize;
}

float corner(vec2 coord) {
	coord *= TextureSize / InputSize;
	coord = (coord - vec2(0.5)) * vec2(overscan_x / 100.0, overscan_y / 100.0) + vec2(0.5);
	coord = min(coord, vec2(1.0)-coord) * aspect;
	vec2 cdist = vec2(cornersize);
	coord = (cdist - min(coord,cdist));
	float dist = sqrt(dot(coord,coord));
	return clamp((cdist.x-dist)*cornersmooth,0.0, 1.0);
}

// Calculate the influence of a scanline on the current pixel.
//
// 'distance' is the distance in texture coordinates from the current
// pixel to the scanline in question.
// 'color' is the colour of the scanline at the horizontal location of
// the current pixel.
vec4 scanlineWeights(float distance, vec4 color) {
	// \"wid\" controls the width of the scanline beam, for each RGB
	// channel The \"weights\" lines basically specify the formula
	// that gives you the profile of the beam, i.e. the intensity as
	// a function of distance from the vertical center of the
	// scanline. In this case, it is gaussian if width=2, and
	// becomes nongaussian for larger widths. Ideally this should
	// be normalized so that the integral across the beam is
	// independent of its width. That is, for a narrower beam
	// \"weights\" should have a higher peak at the center of the
	// scanline than for a wider beam.

	//#ifdef USEGAUSSIAN
	//vec4 wid = 0.3 + 0.1 * pow(color, vec4(3.0));
	//vec4 weights = vec4(distance / wid);
	//return (lum + 0.4) * exp(-weights * weights) / wid;
	//#else
	vec4 wid = 2.0 + 2.0 * pow(color, vec4(4.0));
	vec4 weights = vec4(distance / scanline_weight);
	return (lum + 1.4) * exp(-pow(weights * inversesqrt(0.5 * wid), wid)) / (0.6 + 0.2 * wid);
	//#endiF
}


void fragment() {
	// Here's a helpful diagram to keep in mind while trying to
	// understand the code:
	//
	//  |      |      |      |      |
	// -------------------------------
	//  |      |      |      |      |
	//  |  01  |  11  |  21  |  31  | <-- current scanline
	//  |      | @    |      |      |
	// -------------------------------
	//  |      |      |      |      |
	//  |  02  |  12  |  22  |  32  | <-- next scanline
	//  |      |      |      |      |
	// -------------------------------
	//  |      |      |      |      |
	//
	// Each character-cell represents a pixel on the output
	// surface, \"@\" represents the current pixel (always somewhere
	// in the bottom half of the current scan-line, or the top-half
	// of the next scanline). The grid of lines represents the
	// edges of the texels of the underlying texture.
	
	// Texture coordinates of the texel containing the active pixel.
	vec2 xy = (CURVATURE > 0.5) ? transform(UV.xy) : UV.xy;
	
	float cval = corner(xy);
	
	// Of all the pixels that are mapped onto the texel we are
	// currently rendering, which pixel are we currently rendering?
	vec2 ilvec = vec2(0.0,ilfac.y * interlace_detect > 1.5 ? mod(float(FrameCount),2.0) : 0.0);
	vec2 ratio_scale = (xy * TextureSize - vec2(0.5) + ilvec)/ilfac;
	
	//#ifdef OVERSAMPLE
	float filter_ = InputSize.y/OutputSize.y;//fwidth(ratio_scale.y);
	//#endif
	
	vec2 uv_ratio = fract(ratio_scale);
	
	// Snap to the center of the underlying texel.
	xy = (floor(ratio_scale)*ilfac + vec2(0.5) - ilvec) / TextureSize;
	
	// Calculate Lanczos scaling coefficients describing the effect
	// of various neighbour texels in a scanline on the current
	// pixel.
	vec4 coeffs = PI * vec4(1.0 + uv_ratio.x, uv_ratio.x, 1.0 - uv_ratio.x, 2.0 - uv_ratio.x);
	
	// Prevent division by zero.
	coeffs = max(abs( coeffs ), 1e-5); // FIX(coeffs)
	
	// Lanczos2 kernel.
	coeffs = 2.0 * sin(coeffs) * sin(coeffs / 2.0) / (coeffs * coeffs);
	
	// Normalize.
	coeffs /= dot(coeffs, vec4(1.0));
	
	// Calculate the effective colour of the current and next
	// scanlines at the horizontal location of the current pixel,
	// using the Lanczos coefficients above.
	vec4 col  = clamp(mat4(
					
					//#ifdef LINEAR_PROCESSING
					pow(texture(TEXTURE, ( xy + vec2(-one.x, 0.0)		)), vec4(CRTgamma)),
					pow(texture(TEXTURE, ( xy							)), vec4(CRTgamma)),
					pow(texture(TEXTURE, ( xy + vec2(one.x, 0.0)		)), vec4(CRTgamma)),
					pow(texture(TEXTURE, ( xy + vec2(2.0 * one.x, 0.0)	)), vec4(CRTgamma))) * coeffs,
					//#else
					//texture(TEXTURE, ( xy + vec2(-one.x, 0.0)		)),
					//texture(TEXTURE, ( xy							)),
					//texture(TEXTURE, ( xy + vec2(one.x, 0.0)		)),
					//texture(TEXTURE, ( xy + vec2(2.0 * one.x, 0.0)	))) * coeffs,
					//#endif
					
					0.0, 1.0);

    vec4 col2 = clamp(mat4(
					
					//#ifdef LINEAR_PROCESSING
					pow(texture(TEXTURE, ( xy + vec2(-one.x, one.y)		)), vec4(CRTgamma)),
					pow(texture(TEXTURE, ( xy + vec2(0.0, one.y)		)), vec4(CRTgamma)),
					pow(texture(TEXTURE, ( xy + one						)), vec4(CRTgamma)),
					pow(texture(TEXTURE, ( xy + vec2(2.0 * one.x, one.y))), vec4(CRTgamma))) * coeffs,
					//#else
					//texture(TEXTURE, ( xy + vec2(-one.x, one.y)		)),
					//texture(TEXTURE, ( xy + vec2(0.0, one.y)		)),
					//texture(TEXTURE, ( xy + one						)),
					//texture(TEXTURE, ( xy + vec2(2.0 * one.x, one.y)))) * coeffs,
					//#endif
					
					0.0, 1.0);
	
	//#ifndef LINEAR_PROCESSING
	//col  = pow(col , vec4(CRTgamma));
	//col2 = pow(col2, vec4(CRTgamma));
	//#endif
	
	// Calculate the influence of the current and next scanlines on
	// the current pixel.
	vec4 weights  = scanlineWeights(uv_ratio.y, col);
	vec4 weights2 = scanlineWeights(1.0 - uv_ratio.y, col2);

	//#ifdef OVERSAMPLE
	uv_ratio.y =uv_ratio.y+1.0/3.0*filter_;
	weights = (weights+scanlineWeights(uv_ratio.y, col))/3.0;
	weights2=(weights2+scanlineWeights(abs(1.0-uv_ratio.y), col2))/3.0;
	uv_ratio.y =uv_ratio.y-2.0/3.0*filter_;
	weights=weights+scanlineWeights(abs(uv_ratio.y), col)/3.0;
	weights2=weights2+scanlineWeights(abs(1.0-uv_ratio.y), col2)/3.0;
	//#endif
	
	vec3 mul_res  = (col * weights + col2 * weights2).rgb * vec3(cval);
	
	// dot-mask emulation:
	// Output pixels are alternately tinted green and magenta.
	vec3 dotMaskWeights = mix(
		vec3(1.0, 1.0 - DOTMASK, 1.0),
		vec3(1.0 - DOTMASK, 1.0, 1.0 - DOTMASK),
		floor(mod(mod_factor, 2.0))
	);
	
	mul_res *= dotMaskWeights;
	
	// Convert the image gamma for display on our output device.
	mul_res = pow(mul_res, vec3(1.0 / monitorgamma));
	
	// Color the texel.
	COLOR = vec4(mul_res, 1.0);
} 
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/CRTgamma = 2.4
shader_param/monitorgamma = 2.2
shader_param/d = 1.6
shader_param/CURVATURE = 1.0
shader_param/R = 2.0
shader_param/cornersize = 0.03
shader_param/cornersmooth = 1000.0
shader_param/x_tilt = 0.0
shader_param/y_tilt = 0.0
shader_param/overscan_x = 100.0
shader_param/overscan_y = 100.0
shader_param/DOTMASK = 0.3
shader_param/SHARPER = 1.0
shader_param/scanline_weight = 0.3
shader_param/lum = 0.0
shader_param/interlace_detect = 1.0
shader_param/OutputSize = null
shader_param/TextureSize = null
shader_param/InputSize = null
shader_param/FrameCount = null

[sub_resource type="TileSet" id=3]
0/name = "robot.png 0"
0/texture = ExtResource( 6 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 160, 32, 16 )
0/tile_mode = 0
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0
1/name = "robot.png 1"
1/texture = ExtResource( 6 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 32, 160, 16, 8 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape_one_way = false
1/shape_one_way_margin = 0.0
1/shapes = [  ]
1/z_index = 0
2/name = "robot.png 2"
2/texture = ExtResource( 6 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 16, 176, 16, 16 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape_one_way = false
2/shape_one_way_margin = 0.0
2/shapes = [  ]
2/z_index = 0
3/name = "robot.png 3"
3/texture = ExtResource( 6 )
3/tex_offset = Vector2( 0, 0 )
3/modulate = Color( 1, 1, 1, 1 )
3/region = Rect2( 0, 176, 16, 16 )
3/tile_mode = 0
3/occluder_offset = Vector2( 0, 0 )
3/navigation_offset = Vector2( 0, 0 )
3/shape_offset = Vector2( 0, 0 )
3/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
3/shape_one_way = false
3/shape_one_way_margin = 0.0
3/shapes = [  ]
3/z_index = 0
4/name = "robot.png 4"
4/texture = ExtResource( 6 )
4/tex_offset = Vector2( 0, 0 )
4/modulate = Color( 1, 1, 1, 1 )
4/region = Rect2( 32, 176, 16, 16 )
4/tile_mode = 0
4/occluder_offset = Vector2( 0, 0 )
4/navigation_offset = Vector2( 0, 0 )
4/shape_offset = Vector2( 0, 0 )
4/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
4/shape_one_way = false
4/shape_one_way_margin = 0.0
4/shapes = [  ]
4/z_index = 0
5/name = "robot.png 5"
5/texture = ExtResource( 6 )
5/tex_offset = Vector2( 0, 0 )
5/modulate = Color( 1, 1, 1, 1 )
5/region = Rect2( 48, 176, 16, 16 )
5/tile_mode = 0
5/occluder_offset = Vector2( 0, 0 )
5/navigation_offset = Vector2( 0, 0 )
5/shape_offset = Vector2( 0, 0 )
5/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
5/shape_one_way = false
5/shape_one_way_margin = 0.0
5/shapes = [  ]
5/z_index = 0
6/name = "robot.png 6"
6/texture = ExtResource( 6 )
6/tex_offset = Vector2( 0, 0 )
6/modulate = Color( 1, 1, 1, 1 )
6/region = Rect2( 64, 176, 16, 16 )
6/tile_mode = 0
6/occluder_offset = Vector2( 0, 0 )
6/navigation_offset = Vector2( 0, 0 )
6/shape_offset = Vector2( 0, 0 )
6/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
6/shape_one_way = false
6/shape_one_way_margin = 0.0
6/shapes = [  ]
6/z_index = 0
7/name = "robot.png 7"
7/texture = ExtResource( 6 )
7/tex_offset = Vector2( 0, 0 )
7/modulate = Color( 1, 1, 1, 1 )
7/region = Rect2( 80, 160, 16, 64 )
7/tile_mode = 0
7/occluder_offset = Vector2( 0, 0 )
7/navigation_offset = Vector2( 0, 0 )
7/shape_offset = Vector2( 0, 0 )
7/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
7/shape_one_way = false
7/shape_one_way_margin = 0.0
7/shapes = [  ]
7/z_index = 0
8/name = "robot.png 8"
8/texture = ExtResource( 6 )
8/tex_offset = Vector2( 0, 0 )
8/modulate = Color( 1, 1, 1, 1 )
8/region = Rect2( 48, 192, 32, 32 )
8/tile_mode = 0
8/occluder_offset = Vector2( 0, 0 )
8/navigation_offset = Vector2( 0, 0 )
8/shape_offset = Vector2( 0, 0 )
8/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
8/shape_one_way = false
8/shape_one_way_margin = 0.0
8/shapes = [  ]
8/z_index = 0
9/name = "robot.png 9"
9/texture = ExtResource( 6 )
9/tex_offset = Vector2( 0, 0 )
9/modulate = Color( 1, 1, 1, 1 )
9/region = Rect2( 0, 192, 32, 32 )
9/tile_mode = 0
9/occluder_offset = Vector2( 0, 0 )
9/navigation_offset = Vector2( 0, 0 )
9/shape_offset = Vector2( 0, 0 )
9/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
9/shape_one_way = false
9/shape_one_way_margin = 0.0
9/shapes = [  ]
9/z_index = 0
10/name = "robot.png 10"
10/texture = ExtResource( 6 )
10/tex_offset = Vector2( 0, 0 )
10/modulate = Color( 1, 1, 1, 1 )
10/region = Rect2( 32, 192, 16, 16 )
10/tile_mode = 0
10/occluder_offset = Vector2( 0, 0 )
10/navigation_offset = Vector2( 0, 0 )
10/shape_offset = Vector2( 0, 0 )
10/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
10/shape_one_way = false
10/shape_one_way_margin = 0.0
10/shapes = [  ]
10/z_index = 0
11/name = "robot.png 11"
11/texture = ExtResource( 6 )
11/tex_offset = Vector2( 0, 0 )
11/modulate = Color( 1, 1, 1, 1 )
11/region = Rect2( 32, 208, 16, 16 )
11/tile_mode = 0
11/occluder_offset = Vector2( 0, 0 )
11/navigation_offset = Vector2( 0, 0 )
11/shape_offset = Vector2( 0, 0 )
11/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
11/shape_one_way = false
11/shape_one_way_margin = 0.0
11/shapes = [  ]
11/z_index = 0

[sub_resource type="ConvexPolygonShape2D" id=4]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=5]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=6]
points = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )

[sub_resource type="ConvexPolygonShape2D" id=7]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=8]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=9]
points = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )

[sub_resource type="ConvexPolygonShape2D" id=10]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=11]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=12]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=13]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=14]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=15]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=16]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=17]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=18]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=19]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=20]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=21]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=22]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=23]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=24]
points = PoolVector2Array( 16, 16, 0, 16, 0, 16, 16, 16 )

[sub_resource type="ConvexPolygonShape2D" id=25]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=26]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=27]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=28]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=29]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=30]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=31]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=32]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=33]
points = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )

[sub_resource type="ConvexPolygonShape2D" id=34]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=35]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=36]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=37]
points = PoolVector2Array( 0, 0, 16, 0, 16, 16, 0, 16 )

[sub_resource type="ConvexPolygonShape2D" id=38]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=39]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=40]
points = PoolVector2Array( 16, 16, 0, 16, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=41]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=42]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=43]
points = PoolVector2Array( 16, 16, 0, 16, 0, 8, 16, 8 )

[sub_resource type="ConvexPolygonShape2D" id=44]
points = PoolVector2Array( 16, 16, 0, 16, 0, 8, 16, 8 )

[sub_resource type="ConvexPolygonShape2D" id=45]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=46]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=47]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=48]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=49]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="ConvexPolygonShape2D" id=50]
points = PoolVector2Array( 16, 8, 0, 8, 0, 0, 16, 0 )

[sub_resource type="TileSet" id=51]
0/name = "robot.png 0"
0/texture = ExtResource( 6 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 0, 0, 176, 128 )
0/tile_mode = 2
0/autotile/icon_coordinate = Vector2( 0, 0 )
0/autotile/tile_size = Vector2( 16, 16 )
0/autotile/spacing = 0
0/autotile/occluder_map = [  ]
0/autotile/navpoly_map = [  ]
0/autotile/priority_map = [  ]
0/autotile/z_index_map = [  ]
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape = SubResource( 4 )
0/shape_one_way = false
0/shape_one_way_margin = 1.0
0/shapes = [ {
"autotile_coord": Vector2( 0, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 4 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 5 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 6 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 7 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 8 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 9 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 10 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 11 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 12 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 13 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 14 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 15 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 16 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 17 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 18 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 19 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 20 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 21 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 22 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 23 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 24 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 25 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 26 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 27 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 28 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 29 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 30 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 31 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 32 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 4 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 33 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 0, 5 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 34 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 1, 5 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 35 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 2, 5 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 36 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 3, 5 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 37 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 4, 5 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 38 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 5, 5 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 39 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 6, 5 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 40 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 41 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 0 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 42 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 43 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 1 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 44 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 45 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 46 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 2 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 47 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 7, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 48 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 8, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 49 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
}, {
"autotile_coord": Vector2( 9, 3 ),
"one_way": false,
"one_way_margin": 1.0,
"shape": SubResource( 50 ),
"shape_transform": Transform2D( 1, 0, 0, 1, 0, 0 )
} ]
0/z_index = 0

[sub_resource type="DynamicFont" id=52]
size = 30
font_data = ExtResource( 5 )

[sub_resource type="TileSet" id=53]
0/name = "robot.png 0"
0/texture = ExtResource( 6 )
0/tex_offset = Vector2( 0, 0 )
0/modulate = Color( 1, 1, 1, 1 )
0/region = Rect2( 48, 184, 8, 8 )
0/tile_mode = 2
0/autotile/icon_coordinate = Vector2( 0, 0 )
0/autotile/tile_size = Vector2( 8, 8 )
0/autotile/spacing = 0
0/autotile/occluder_map = [  ]
0/autotile/navpoly_map = [  ]
0/autotile/priority_map = [  ]
0/autotile/z_index_map = [  ]
0/occluder_offset = Vector2( 0, 0 )
0/navigation_offset = Vector2( 0, 0 )
0/shape_offset = Vector2( 0, 0 )
0/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
0/shape_one_way = false
0/shape_one_way_margin = 0.0
0/shapes = [  ]
0/z_index = 0
1/name = "robot.png 1"
1/texture = ExtResource( 6 )
1/tex_offset = Vector2( 0, 0 )
1/modulate = Color( 1, 1, 1, 1 )
1/region = Rect2( 0, 160, 32, 16 )
1/tile_mode = 0
1/occluder_offset = Vector2( 0, 0 )
1/navigation_offset = Vector2( 0, 0 )
1/shape_offset = Vector2( 0, 0 )
1/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
1/shape_one_way = false
1/shape_one_way_margin = 0.0
1/shapes = [  ]
1/z_index = 0
2/name = "robot.png 2"
2/texture = ExtResource( 6 )
2/tex_offset = Vector2( 0, 0 )
2/modulate = Color( 1, 1, 1, 1 )
2/region = Rect2( 32, 160, 16, 8 )
2/tile_mode = 0
2/occluder_offset = Vector2( 0, 0 )
2/navigation_offset = Vector2( 0, 0 )
2/shape_offset = Vector2( 0, 0 )
2/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
2/shape_one_way = false
2/shape_one_way_margin = 0.0
2/shapes = [  ]
2/z_index = 0
3/name = "robot.png 3"
3/texture = ExtResource( 6 )
3/tex_offset = Vector2( 0, 0 )
3/modulate = Color( 1, 1, 1, 1 )
3/region = Rect2( 48, 160, 16, 8 )
3/tile_mode = 0
3/occluder_offset = Vector2( 0, 0 )
3/navigation_offset = Vector2( 0, 0 )
3/shape_offset = Vector2( 0, 0 )
3/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
3/shape_one_way = false
3/shape_one_way_margin = 0.0
3/shapes = [  ]
3/z_index = 0
4/name = "robot.png 4"
4/texture = ExtResource( 6 )
4/tex_offset = Vector2( 0, 0 )
4/modulate = Color( 1, 1, 1, 1 )
4/region = Rect2( 48, 176, 16, 16 )
4/tile_mode = 0
4/occluder_offset = Vector2( 0, 0 )
4/navigation_offset = Vector2( 0, 0 )
4/shape_offset = Vector2( 0, 0 )
4/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
4/shape_one_way = false
4/shape_one_way_margin = 0.0
4/shapes = [  ]
4/z_index = 0
5/name = "robot.png 5"
5/texture = ExtResource( 6 )
5/tex_offset = Vector2( 0, 0 )
5/modulate = Color( 1, 1, 1, 1 )
5/region = Rect2( 64, 176, 16, 16 )
5/tile_mode = 0
5/occluder_offset = Vector2( 0, 0 )
5/navigation_offset = Vector2( 0, 0 )
5/shape_offset = Vector2( 0, 0 )
5/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
5/shape_one_way = false
5/shape_one_way_margin = 0.0
5/shapes = [  ]
5/z_index = 0
6/name = "robot.png 6"
6/texture = ExtResource( 6 )
6/tex_offset = Vector2( 0, 0 )
6/modulate = Color( 1, 1, 1, 1 )
6/region = Rect2( 80, 160, 16, 64 )
6/tile_mode = 0
6/occluder_offset = Vector2( 0, 0 )
6/navigation_offset = Vector2( 0, 0 )
6/shape_offset = Vector2( 0, 0 )
6/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
6/shape_one_way = false
6/shape_one_way_margin = 0.0
6/shapes = [  ]
6/z_index = 0
7/name = "robot.png 7"
7/texture = ExtResource( 6 )
7/tex_offset = Vector2( 0, 0 )
7/modulate = Color( 1, 1, 1, 1 )
7/region = Rect2( 48, 192, 32, 32 )
7/tile_mode = 0
7/occluder_offset = Vector2( 0, 0 )
7/navigation_offset = Vector2( 0, 0 )
7/shape_offset = Vector2( 0, 0 )
7/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
7/shape_one_way = false
7/shape_one_way_margin = 0.0
7/shapes = [  ]
7/z_index = 0
8/name = "robot.png 8"
8/texture = ExtResource( 6 )
8/tex_offset = Vector2( 0, 0 )
8/modulate = Color( 1, 1, 1, 1 )
8/region = Rect2( 32, 192, 16, 16 )
8/tile_mode = 0
8/occluder_offset = Vector2( 0, 0 )
8/navigation_offset = Vector2( 0, 0 )
8/shape_offset = Vector2( 0, 0 )
8/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
8/shape_one_way = false
8/shape_one_way_margin = 0.0
8/shapes = [  ]
8/z_index = 0
9/name = "robot.png 9"
9/texture = ExtResource( 6 )
9/tex_offset = Vector2( 0, 0 )
9/modulate = Color( 1, 1, 1, 1 )
9/region = Rect2( 32, 208, 16, 16 )
9/tile_mode = 0
9/occluder_offset = Vector2( 0, 0 )
9/navigation_offset = Vector2( 0, 0 )
9/shape_offset = Vector2( 0, 0 )
9/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
9/shape_one_way = false
9/shape_one_way_margin = 0.0
9/shapes = [  ]
9/z_index = 0
10/name = "robot.png 10"
10/texture = ExtResource( 6 )
10/tex_offset = Vector2( 0, 0 )
10/modulate = Color( 1, 1, 1, 1 )
10/region = Rect2( 0, 192, 32, 32 )
10/tile_mode = 0
10/occluder_offset = Vector2( 0, 0 )
10/navigation_offset = Vector2( 0, 0 )
10/shape_offset = Vector2( 0, 0 )
10/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
10/shape_one_way = false
10/shape_one_way_margin = 0.0
10/shapes = [  ]
10/z_index = 0
11/name = "robot.png 11"
11/texture = ExtResource( 6 )
11/tex_offset = Vector2( 0, 0 )
11/modulate = Color( 1, 1, 1, 1 )
11/region = Rect2( 0, 176, 16, 16 )
11/tile_mode = 0
11/occluder_offset = Vector2( 0, 0 )
11/navigation_offset = Vector2( 0, 0 )
11/shape_offset = Vector2( 0, 0 )
11/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
11/shape_one_way = false
11/shape_one_way_margin = 0.0
11/shapes = [  ]
11/z_index = 0
12/name = "robot.png 12"
12/texture = ExtResource( 6 )
12/tex_offset = Vector2( 0, 0 )
12/modulate = Color( 1, 1, 1, 1 )
12/region = Rect2( 16, 176, 16, 16 )
12/tile_mode = 0
12/occluder_offset = Vector2( 0, 0 )
12/navigation_offset = Vector2( 0, 0 )
12/shape_offset = Vector2( 0, 0 )
12/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
12/shape_one_way = false
12/shape_one_way_margin = 0.0
12/shapes = [  ]
12/z_index = 0
13/name = "robot.png 13"
13/texture = ExtResource( 6 )
13/tex_offset = Vector2( 0, 0 )
13/modulate = Color( 1, 1, 1, 1 )
13/region = Rect2( 32, 176, 16, 16 )
13/tile_mode = 0
13/occluder_offset = Vector2( 0, 0 )
13/navigation_offset = Vector2( 0, 0 )
13/shape_offset = Vector2( 0, 0 )
13/shape_transform = Transform2D( 1, 0, 0, 1, 0, 0 )
13/shape_one_way = false
13/shape_one_way_margin = 0.0
13/shapes = [  ]
13/z_index = 0

[sub_resource type="Animation" id=54]
resource_name = "furnish"
tracks/0/type = "value"
tracks/0/path = NodePath("MecanicArm:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -6.10352e-05, -51.5691 ), Vector2( -6.10352e-05, 135.431 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("PlayerSprite:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( -19.6202, -9.05164 ), Vector2( -19.62, 177.193 ) ]
}

[sub_resource type="DynamicFont" id=55]
size = 30
font_data = ExtResource( 5 )

[node name="Level" type="Node2D"]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="UI" parent="CanvasLayer" instance=ExtResource( 11 )]

[node name="TextureRect" type="TextureRect" parent="CanvasLayer/UI"]
material = SubResource( 2 )
margin_left = -664.0
margin_top = -464.0
margin_right = 2008.0
margin_bottom = 1320.0
size_flags_horizontal = 3
size_flags_vertical = 3
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Player" parent="." groups=[
"player",
] instance=ExtResource( 9 )]
position = Vector2( -3320, -144 )

[node name="Emitter" parent="." instance=ExtResource( 10 )]
position = Vector2( 120, 96 )

[node name="Emitter5" parent="." instance=ExtResource( 10 )]
position = Vector2( 1272, 464 )

[node name="Emitter6" parent="." instance=ExtResource( 10 )]
position = Vector2( 1432, -40 )

[node name="Emitter7" parent="." instance=ExtResource( 10 )]
position = Vector2( 2136, 192 )

[node name="Emitter12" parent="." instance=ExtResource( 10 )]
position = Vector2( 1944, 192 )

[node name="Emitter9" parent="." instance=ExtResource( 10 )]
position = Vector2( 2456, -19.1842 )

[node name="Emitter10" parent="." instance=ExtResource( 10 )]
position = Vector2( 2840, -280 )

[node name="Emitter8" parent="." instance=ExtResource( 10 )]
position = Vector2( 4093.43, -391.393 )

[node name="Emitter18" parent="." instance=ExtResource( 10 )]
position = Vector2( 5496, -584 )

[node name="Emitter20" parent="." instance=ExtResource( 10 )]
position = Vector2( 5976, -584 )

[node name="Emitter22" parent="." instance=ExtResource( 10 )]
position = Vector2( 6440, -576 )

[node name="Emitter23" parent="." instance=ExtResource( 10 )]
position = Vector2( 6680, -576 )

[node name="Emitter24" parent="." instance=ExtResource( 10 )]
position = Vector2( 6920, -576 )

[node name="Emitter33" parent="." instance=ExtResource( 10 )]
position = Vector2( 7888, 504 )

[node name="Emitter34" parent="." instance=ExtResource( 10 )]
position = Vector2( 6896, 496 )

[node name="Emitter25" parent="." instance=ExtResource( 10 )]
position = Vector2( 6600, 976 )

[node name="Emitter26" parent="." instance=ExtResource( 10 )]
position = Vector2( 6264, 984 )

[node name="Emitter27" parent="." instance=ExtResource( 10 )]
position = Vector2( 5928, 1000 )

[node name="Emitter28" parent="." instance=ExtResource( 10 )]
position = Vector2( 5592, 992 )

[node name="Emitter29" parent="." instance=ExtResource( 10 )]
position = Vector2( 5256, 976 )

[node name="Emitter30" parent="." instance=ExtResource( 10 )]
position = Vector2( 4000, 1992 )

[node name="Emitter31" parent="." instance=ExtResource( 10 )]
position = Vector2( 4392, -8 )

[node name="Emitter32" parent="." instance=ExtResource( 10 )]
position = Vector2( 4352, 792 )

[node name="Emitter14" parent="." instance=ExtResource( 10 )]
position = Vector2( 3021, -9.99243 )

[node name="Emitter13" parent="." instance=ExtResource( 10 )]
position = Vector2( 3035.35, 127.394 )

[node name="Emitter3" parent="." instance=ExtResource( 10 )]
position = Vector2( -1656, -384 )

[node name="Emitter2" parent="." instance=ExtResource( 10 )]
position = Vector2( 904, 112 )

[node name="Emitter4" parent="." instance=ExtResource( 10 )]
position = Vector2( 224, 584 )

[node name="Emitter17" parent="." instance=ExtResource( 10 )]
position = Vector2( -504, -144 )

[node name="Emitter15" parent="." instance=ExtResource( 10 )]
position = Vector2( -1192, -120 )

[node name="Emitter16" parent="." instance=ExtResource( 10 )]
position = Vector2( 725.977, 594.883 )

[node name="Emitter11" parent="." instance=ExtResource( 10 )]
position = Vector2( -784, 24 )

[node name="TileMap2" type="TileMap" parent="."]
scale = Vector2( 3, 3 )
tile_set = SubResource( 3 )
cell_size = Vector2( 16, 16 )
cell_custom_transform = Transform2D( 32, 0, 0, 32, 0, 0 )
format = 1
tile_data = PoolIntArray( -851864, 0, 0, -851816, 0, 0, -851808, 0, 0, -655386, 1, 0, -655374, 0, 0, -655373, 0, 0, -655368, 7, 0, -655201, 8, 0, -589718, 8, 0, -589674, 8, 0, -458814, 0, 0, -458805, 0, 0, -458782, 10, 0, -458781, 10, 0, -393246, 10, 0, -393130, 5, 0, -393129, 5, 0, -327594, 5, 0, -327593, 5, 0, -196625, 1, 0, -262073, 0, 0, -262064, 1, 0, -65500, 0, 0, -65427, 0, 0, -65422, 0, 0, 65480, 8, 0, 65483, 8, 0, 65514, 1, 0, 131153, 1, 0, 262127, 2, 0, 262128, 2, 0, 262129, 2, 0, 262130, 2, 0, 196608, 8, 0, 196612, 8, 0, 196672, 8, 0, 196678, 8, 0, 196684, 8, 0, 327663, 2, 0, 327664, 2, 0, 327665, 2, 0, 327666, 2, 0, 262159, 8, 0, 393199, 2, 0, 393200, 2, 0, 393201, 2, 0, 393202, 2, 0, 327791, 8, 0, 327803, 8, 0, 327813, 8, 0, 524291, 8, 0, 2162764, 8, 0, 2228322, 8, 0 )

[node name="TileMap" type="TileMap" parent="."]
position = Vector2( 5.96046e-08, 0 )
scale = Vector2( 3, 3 )
tile_set = SubResource( 51 )
cell_size = Vector2( 16, 16 )
cell_custom_transform = Transform2D( 32, 0, 0, 32, 0, 0 )
collision_layer = 3
format = 1
tile_data = PoolIntArray( -917408, 0, 0, -917407, 0, 0, -917406, 0, 0, -917405, 0, 0, -917404, 0, 0, -917403, 0, 0, -917402, 0, 0, -917401, 0, 0, -917400, 0, 0, -917399, 0, 0, -917398, 0, 0, -917397, 0, 0, -917396, 0, 0, -917395, 0, 0, -917394, 0, 0, -917393, 0, 0, -917392, 0, 0, -917391, 0, 0, -917390, 0, 0, -917389, 0, 0, -917388, 0, 0, -917387, 0, 0, -917386, 0, 0, -917385, 0, 0, -917384, 0, 0, -917383, 0, 0, -917382, 0, 0, -917381, 0, 0, -917380, 0, 0, -917379, 0, 0, -917378, 0, 0, -917377, 0, 0, -917376, 0, 0, -917375, 0, 0, -917374, 0, 0, -917373, 0, 0, -917372, 0, 0, -917371, 0, 0, -917370, 0, 0, -917369, 0, 0, -917368, 0, 0, -917367, 0, 0, -917366, 0, 0, -917365, 0, 0, -917364, 0, 0, -917363, 0, 0, -917362, 0, 0, -917361, 0, 0, -917360, 0, 0, -917359, 0, 0, -917358, 0, 0, -917357, 0, 0, -917356, 0, 0, -917355, 0, 0, -917354, 0, 0, -917353, 0, 0, -917352, 0, 0, -917351, 0, 0, -917350, 0, 0, -917349, 0, 0, -917348, 0, 0, -917347, 0, 0, -917346, 0, 0, -917345, 0, 0, -917344, 0, 0, -917343, 0, 0, -917342, 0, 0, -917341, 0, 0, -917340, 0, 0, -917339, 0, 0, -917338, 0, 0, -851872, 0, 0, -851867, 0, 0, -851858, 0, 0, -851856, 0, 0, -851855, 0, 0, -851853, 0, 0, -851851, 0, 0, -851850, 0, 0, -851848, 0, 0, -851846, 0, 0, -851845, 0, 0, -851843, 0, 0, -851841, 0, 0, -851838, 0, 0, -851836, 0, 0, -851833, 0, 0, -851831, 0, 0, -851828, 0, 0, -851826, 0, 0, -851825, 0, 0, -851802, 0, 0, -720930, 0, 0, -720929, 0, 0, -720928, 0, 0, -720927, 0, 0, -720926, 0, 0, -720925, 0, 0, -720924, 0, 0, -720923, 0, 0, -720922, 0, 0, -720921, 0, 0, -720920, 0, 0, -720919, 0, 0, -720918, 0, 0, -720917, 0, 0, -720916, 0, 0, -720915, 0, 0, -720914, 0, 0, -720913, 0, 0, -720912, 0, 0, -720911, 0, 0, -720910, 0, 0, -720909, 0, 0, -720908, 0, 0, -720907, 0, 0, -720906, 0, 0, -720905, 0, 0, -720904, 0, 0, -720903, 0, 0, -720902, 0, 0, -786336, 0, 0, -786331, 0, 0, -786322, 0, 0, -786320, 0, 0, -786319, 0, 0, -786317, 0, 0, -786315, 0, 0, -786314, 0, 0, -786312, 0, 0, -786310, 0, 0, -786309, 0, 0, -786307, 0, 0, -786305, 0, 0, -786302, 0, 0, -786300, 0, 0, -786297, 0, 0, -786295, 0, 0, -786292, 0, 0, -786290, 0, 0, -786289, 0, 0, -786266, 0, 0, -655394, 0, 0, -655366, 0, 0, -720800, 0, 0, -720795, 0, 0, -720786, 0, 0, -720784, 0, 0, -720783, 0, 0, -720781, 0, 0, -720779, 0, 0, -720778, 0, 0, -720776, 0, 0, -720774, 0, 0, -720773, 0, 0, -720771, 0, 0, -720769, 0, 0, -720766, 0, 0, -720764, 0, 0, -720763, 0, 0, -720761, 0, 0, -720759, 0, 0, -720756, 0, 0, -720754, 0, 0, -720753, 0, 0, -720730, 0, 0, -589873, 0, 0, -589872, 0, 0, -589871, 0, 0, -589870, 0, 0, -589869, 0, 0, -589868, 0, 0, -589867, 0, 0, -589866, 0, 0, -589865, 0, 0, -589864, 0, 0, -589863, 0, 0, -589862, 0, 0, -589861, 0, 0, -589860, 0, 0, -589859, 0, 0, -589858, 0, 0, -589830, 0, 0, -655277, 0, 0, -655276, 0, 0, -655275, 0, 0, -655274, 0, 0, -655273, 0, 0, -655272, 0, 0, -655271, 0, 0, -655270, 0, 0, -655264, 0, 0, -655259, 0, 0, -655250, 0, 0, -655248, 0, 0, -655247, 0, 0, -655245, 0, 0, -655243, 0, 0, -655242, 0, 0, -655240, 0, 0, -655238, 0, 0, -655237, 0, 0, -655235, 0, 0, -655233, 0, 0, -655230, 0, 0, -655228, 0, 0, -655227, 0, 0, -655225, 0, 0, -655223, 0, 0, -655220, 0, 0, -655218, 0, 0, -655217, 0, 0, -655194, 0, 0, -524360, 0, 0, -524354, 0, 0, -524353, 0, 0, -524352, 0, 0, -524351, 0, 0, -524350, 0, 0, -524349, 0, 0, -524348, 0, 0, -524347, 0, 0, -524346, 0, 0, -524345, 0, 0, -524344, 0, 0, -524343, 0, 0, -524342, 0, 0, -524341, 0, 0, -524340, 0, 0, -524339, 0, 0, -524338, 0, 0, -524294, 0, 0, -589741, 0, 0, -589723, 0, 0, -589714, 0, 0, -589713, 0, 0, -589712, 0, 0, -589711, 0, 0, -589709, 0, 0, -589708, 0, 0, -589707, 0, 0, -589706, 0, 0, -589704, 0, 0, -589703, 0, 0, -589702, 0, 0, -589701, 0, 0, -589699, 0, 0, -589698, 0, 0, -589697, 0, 0, -589694, 0, 0, -589693, 0, 0, -589692, 0, 0, -589691, 0, 0, -589689, 0, 0, -589688, 0, 0, -589687, 0, 0, -589684, 0, 0, -589683, 0, 0, -589682, 0, 0, -589681, 0, 0, -589658, 0, 0, -458824, 0, 0, -458758, 0, 0, -524231, 0, 0, -524230, 0, 0, -524229, 0, 0, -524228, 0, 0, -524205, 0, 0, -524187, 0, 0, -524176, 0, 0, -524175, 0, 0, -524173, 0, 0, -524171, 0, 0, -524170, 0, 0, -524168, 0, 0, -524166, 0, 0, -524165, 0, 0, -524163, 0, 0, -524161, 0, 0, -524158, 0, 0, -524155, 0, 0, -524153, 0, 0, -524146, 0, 0, -524122, 0, 0, -393288, 0, 0, -393222, 0, 0, -458695, 0, 0, -458692, 0, 0, -458669, 0, 0, -458651, 0, 0, -458640, 0, 0, -458639, 0, 0, -458637, 0, 0, -458635, 0, 0, -458634, 0, 0, -458632, 0, 0, -458630, 0, 0, -458629, 0, 0, -458627, 0, 0, -458625, 0, 0, -458622, 0, 0, -458619, 0, 0, -458586, 0, 0, -327752, 0, 0, -327686, 0, 0, -393159, 0, 0, -393156, 0, 0, -393133, 0, 0, -393115, 0, 0, -393104, 0, 0, -393103, 0, 0, -393101, 0, 0, -393099, 0, 0, -393098, 0, 0, -393096, 0, 0, -393094, 0, 0, -393093, 0, 0, -393091, 0, 0, -393089, 0, 0, -393050, 0, 0, -262216, 0, 0, -262164, 0, 0, -262163, 0, 0, -262162, 0, 0, -262161, 0, 0, -262160, 0, 0, -262159, 0, 0, -262158, 0, 0, -262157, 0, 0, -262156, 0, 0, -262155, 0, 0, -262150, 0, 0, -327623, 0, 0, -327620, 0, 0, -327619, 0, 0, -327618, 0, 0, -327617, 0, 0, -327616, 0, 0, -327615, 0, 0, -327614, 0, 0, -327613, 0, 0, -327612, 0, 0, -327611, 0, 0, -327610, 0, 0, -327609, 0, 0, -327608, 0, 0, -327607, 0, 0, -327606, 0, 0, -327605, 0, 0, -327604, 0, 0, -327603, 0, 0, -327602, 0, 0, -327601, 0, 0, -327600, 0, 0, -327599, 0, 0, -327598, 0, 0, -327597, 0, 0, -327579, 0, 0, -327545, 0, 0, -327544, 0, 0, -327542, 0, 0, -327540, 0, 0, -327539, 0, 0, -327538, 0, 0, -327514, 0, 0, -196680, 0, 0, -196635, 0, 0, -196634, 0, 0, -196633, 0, 0, -196632, 0, 0, -196631, 0, 0, -196630, 0, 0, -196629, 0, 0, -196628, 0, 0, -196614, 0, 0, -262087, 0, 0, -262015, 0, 0, -262011, 0, 0, -262010, 0, 0, -262009, 0, 0, -262003, 0, 0, -261978, 0, 0, -131144, 0, 0, -131100, 0, 0, -131099, 0, 0, -131078, 0, 0, -196551, 0, 0, -196495, 0, 0, -196490, 0, 0, -196484, 0, 0, -196481, 0, 0, -196480, 0, 0, -196479, 0, 0, -196477, 0, 0, -196476, 0, 0, -196475, 0, 0, -196473, 0, 0, -196472, 0, 0, -196467, 0, 0, -196462, 0, 0, -196442, 0, 0, -65608, 0, 0, -65565, 0, 0, -65564, 0, 0, -65542, 0, 0, -131044, 0, 0, -131043, 0, 0, -131042, 0, 0, -131041, 0, 0, -131040, 0, 0, -131039, 0, 0, -131038, 0, 0, -131037, 0, 0, -131036, 0, 0, -131035, 0, 0, -131034, 0, 0, -131033, 0, 0, -131032, 0, 0, -131031, 0, 0, -131030, 0, 0, -131029, 0, 0, -131028, 0, 0, -131027, 0, 0, -131026, 0, 0, -131025, 0, 0, -131024, 0, 0, -131023, 0, 0, -131022, 0, 0, -131021, 0, 0, -131020, 0, 0, -131019, 0, 0, -131018, 0, 0, -131017, 0, 0, -131016, 0, 0, -131015, 0, 0, -131011, 0, 0, -131010, 0, 0, -131009, 0, 0, -131007, 0, 0, -131005, 0, 0, -131003, 0, 0, -131002, 0, 0, -131000, 0, 0, -130997, 0, 0, -130994, 0, 0, -130991, 0, 0, -130990, 0, 0, -130989, 0, 0, -130988, 0, 0, -130987, 0, 0, -130986, 0, 0, -130985, 0, 0, -130984, 0, 0, -130983, 0, 0, -130982, 0, 0, -130981, 0, 0, -130980, 0, 0, -130979, 0, 0, -130978, 0, 0, -130977, 0, 0, -130976, 0, 0, -130975, 0, 0, -130974, 0, 0, -130973, 0, 0, -130972, 0, 0, -130971, 0, 0, -130970, 0, 0, -130969, 0, 0, -130968, 0, 0, -130967, 0, 0, -130966, 0, 0, -130965, 0, 0, -130964, 0, 0, -130963, 0, 0, -130962, 0, 0, -130961, 0, 0, -130960, 0, 0, -130959, 0, 0, -130958, 0, 0, -130957, 0, 0, -130956, 0, 0, -130955, 0, 0, -130954, 0, 0, -130953, 0, 0, -130950, 0, 0, -130949, 0, 0, -130948, 0, 0, -130947, 0, 0, -130946, 0, 0, -130945, 0, 0, -130944, 0, 0, -130943, 0, 0, -130942, 0, 0, -130941, 0, 0, -130940, 0, 0, -130939, 0, 0, -130938, 0, 0, -130937, 0, 0, -130936, 0, 0, -130935, 0, 0, -130934, 0, 0, -130933, 0, 0, -130932, 0, 0, -130931, 0, 0, -130930, 0, 0, -130929, 0, 0, -130928, 0, 0, -130927, 0, 0, -130926, 0, 0, -130925, 0, 0, -130924, 0, 0, -130923, 0, 0, -130922, 0, 0, -130921, 0, 0, -130920, 0, 0, -130919, 0, 0, -130918, 0, 0, -130917, 0, 0, -130906, 0, 0, -72, 0, 0, -30, 0, 0, -29, 0, 0, -24, 0, 0, -23, 0, 0, -22, 0, 0, -21, 0, 0, -20, 0, 0, -19, 0, 0, -18, 0, 0, -17, 0, 0, -16, 0, 0, -15, 0, 0, -14, 0, 0, -13, 0, 0, -12, 0, 0, -11, 0, 0, -10, 0, 0, -9, 0, 0, -8, 0, 0, -7, 0, 0, -6, 0, 0, -65508, 0, 0, -65478, 0, 196617, -65475, 0, 0, -65473, 0, 9, -65453, 0, 0, -65431, 0, 0, -65416, 0, 0, -65415, 0, 0, -65394, 0, 0, -65381, 0, 0, -65370, 0, 0, 65464, 0, 0, 65505, 0, 0, 65506, 0, 0, 65530, 0, 0, 65534, 0, 0, 65535, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0, 5, 0, 0, 6, 0, 0, 13, 0, 0, 14, 0, 0, 15, 0, 0, 16, 0, 0, 17, 0, 0, 18, 0, 0, 19, 0, 0, 20, 0, 0, 21, 0, 0, 22, 0, 0, 23, 0, 0, 28, 0, 0, 29, 0, 9, 61, 0, 0, 83, 0, 0, 105, 0, 0, 142, 0, 0, 155, 0, 0, 166, 0, 0, 131000, 0, 0, 131040, 0, 0, 131041, 0, 0, 131066, 0, 0, 131070, 0, 0, 65542, 0, 0, 65549, 0, 0, 65559, 0, 0, 65564, 0, 0, 65596, 0, 196617, 65597, 0, 0, 65598, 0, 0, 65599, 0, 0, 65600, 0, 0, 65601, 0, 0, 65602, 0, 0, 65603, 0, 0, 65604, 0, 0, 65605, 0, 0, 65606, 0, 0, 65607, 0, 0, 65608, 0, 0, 65609, 0, 0, 65610, 0, 0, 65611, 0, 0, 65612, 0, 0, 65613, 0, 0, 65614, 0, 0, 65615, 0, 0, 65616, 0, 0, 65617, 0, 0, 65618, 0, 0, 65619, 0, 0, 65641, 0, 0, 65678, 0, 0, 65691, 0, 0, 65702, 0, 0, 196536, 0, 0, 196575, 0, 0, 196576, 0, 0, 196602, 0, 0, 196606, 0, 0, 131078, 0, 0, 131085, 0, 0, 131095, 0, 0, 131100, 0, 0, 131102, 0, 196617, 131103, 0, 0, 131104, 0, 0, 131105, 0, 0, 131106, 0, 0, 131107, 0, 0, 131108, 0, 0, 131120, 0, 0, 131121, 0, 0, 131122, 0, 0, 131123, 0, 0, 131124, 0, 0, 131125, 0, 0, 131126, 0, 0, 131127, 0, 0, 131128, 0, 0, 131129, 0, 0, 131155, 0, 0, 131177, 0, 0, 131214, 0, 0, 131227, 0, 0, 131238, 0, 0, 262072, 0, 0, 262104, 0, 0, 262105, 0, 0, 262106, 0, 0, 262107, 0, 0, 262108, 0, 0, 262109, 0, 0, 262110, 0, 0, 262111, 0, 0, 262112, 0, 0, 262113, 0, 0, 262114, 0, 0, 262115, 0, 0, 262116, 0, 0, 262117, 0, 0, 262118, 0, 0, 262119, 0, 0, 262120, 0, 0, 262121, 0, 0, 262122, 0, 0, 262123, 0, 0, 262124, 0, 0, 262125, 0, 0, 262126, 0, 0, 262131, 0, 0, 262132, 0, 0, 262133, 0, 0, 262134, 0, 0, 262135, 0, 0, 262136, 0, 0, 262137, 0, 0, 262138, 0, 0, 262142, 0, 0, 196614, 0, 0, 196615, 0, 0, 196616, 0, 0, 196617, 0, 0, 196618, 0, 0, 196619, 0, 0, 196620, 0, 0, 196621, 0, 0, 196631, 0, 0, 196636, 0, 0, 196639, 0, 0, 196644, 0, 0, 196645, 0, 9, 196655, 0, 9, 196656, 0, 0, 196665, 0, 0, 196666, 0, 196617, 196691, 0, 0, 196713, 0, 0, 196750, 0, 0, 196763, 0, 0, 196774, 0, 0, 327608, 0, 0, 327609, 0, 0, 327610, 0, 0, 327611, 0, 0, 327612, 0, 0, 327613, 0, 0, 327614, 0, 0, 327615, 0, 0, 327616, 0, 0, 327617, 0, 0, 327618, 0, 0, 327619, 0, 0, 327620, 0, 0, 327621, 0, 0, 327622, 0, 0, 327623, 0, 0, 327624, 0, 0, 327625, 0, 0, 327626, 0, 0, 327627, 0, 0, 327628, 0, 0, 327629, 0, 0, 327630, 0, 0, 327631, 0, 0, 327632, 0, 0, 327633, 0, 0, 327634, 0, 0, 327635, 0, 0, 327636, 0, 0, 327637, 0, 0, 327638, 0, 0, 327639, 0, 0, 327640, 0, 0, 327662, 0, 0, 327663, 0, 9, 262167, 0, 0, 262172, 0, 0, 262173, 0, 196617, 262175, 0, 0, 262180, 0, 0, 262192, 0, 0, 262201, 0, 0, 262227, 0, 0, 262249, 0, 0, 262286, 0, 0, 262299, 0, 0, 262310, 0, 0, 393198, 0, 0, 327703, 0, 0, 327708, 0, 0, 327711, 0, 0, 327716, 0, 0, 327717, 0, 9, 327718, 0, 9, 327726, 0, 9, 327727, 0, 9, 327728, 0, 0, 327737, 0, 0, 327738, 0, 0, 327739, 0, 0, 327740, 0, 0, 327741, 0, 0, 327742, 0, 0, 327743, 0, 0, 327744, 0, 0, 327745, 0, 0, 327746, 0, 0, 327747, 0, 0, 327748, 0, 0, 327749, 0, 0, 327750, 0, 0, 327751, 0, 0, 327752, 0, 0, 327753, 0, 0, 327754, 0, 0, 327755, 0, 0, 327756, 0, 0, 327757, 0, 0, 327758, 0, 0, 327759, 0, 0, 327760, 0, 0, 327761, 0, 0, 327762, 0, 0, 327763, 0, 0, 327785, 0, 0, 327822, 0, 0, 327835, 0, 0, 327846, 0, 0, 458734, 0, 0, 458735, 0, 0, 458736, 0, 0, 458737, 0, 0, 458738, 0, 0, 458739, 0, 0, 458740, 0, 0, 458741, 0, 0, 458742, 0, 0, 458743, 0, 0, 458744, 0, 0, 458745, 0, 0, 458746, 0, 0, 458747, 0, 0, 458748, 0, 0, 458749, 0, 0, 458750, 0, 0, 458751, 0, 0, 393216, 0, 0, 393217, 0, 0, 393218, 0, 0, 393219, 0, 0, 393220, 0, 0, 393221, 0, 0, 393222, 0, 0, 393223, 0, 0, 393224, 0, 0, 393225, 0, 0, 393226, 0, 0, 393227, 0, 0, 393228, 0, 0, 393229, 0, 0, 393230, 0, 0, 393231, 0, 0, 393232, 0, 0, 393233, 0, 0, 393234, 0, 0, 393235, 0, 0, 393239, 0, 0, 393244, 0, 0, 393246, 0, 196617, 393247, 0, 0, 393252, 0, 0, 393264, 0, 0, 393321, 0, 0, 393358, 0, 0, 393371, 0, 0, 393382, 0, 0, 524287, 0, 0, 458772, 0, 9, 458775, 0, 0, 458780, 0, 0, 458783, 0, 0, 458788, 0, 0, 458789, 0, 0, 458790, 0, 0, 458791, 0, 0, 458792, 0, 0, 458793, 0, 0, 458794, 0, 0, 458795, 0, 0, 458796, 0, 0, 458797, 0, 0, 458798, 0, 0, 458799, 0, 0, 458800, 0, 0, 458857, 0, 0, 458894, 0, 0, 458907, 0, 0, 458918, 0, 0, 589823, 0, 0, 524311, 0, 0, 524312, 0, 0, 524313, 0, 0, 524314, 0, 0, 524315, 0, 0, 524316, 0, 0, 524317, 0, 196617, 524319, 0, 0, 524393, 0, 0, 524430, 0, 0, 524443, 0, 0, 524454, 0, 0, 655359, 0, 0, 589846, 0, 9, 589847, 0, 0, 589848, 0, 0, 589852, 0, 0, 589855, 0, 0, 589929, 0, 0, 589966, 0, 0, 589979, 0, 0, 589990, 0, 0, 720895, 0, 0, 655383, 0, 0, 655384, 0, 0, 655388, 0, 0, 655390, 0, 196617, 655391, 0, 0, 655465, 0, 0, 655502, 0, 0, 655515, 0, 0, 655526, 0, 0, 786431, 0, 0, 720900, 0, 0, 720901, 0, 0, 720902, 0, 0, 720903, 0, 0, 720904, 0, 0, 720905, 0, 0, 720906, 0, 0, 720907, 0, 0, 720908, 0, 0, 720909, 0, 0, 720910, 0, 0, 720911, 0, 0, 720912, 0, 0, 720913, 0, 0, 720914, 0, 0, 720915, 0, 0, 720916, 0, 0, 720917, 0, 0, 720918, 0, 0, 720919, 0, 0, 720920, 0, 0, 720924, 0, 0, 720927, 0, 0, 721038, 0, 0, 721051, 0, 0, 721062, 0, 0, 851967, 0, 0, 786435, 0, 9, 786452, 0, 65536, 786457, 0, 196617, 786459, 0, 196617, 786461, 0, 196617, 786463, 0, 0, 786587, 0, 0, 786598, 0, 0, 917503, 0, 0, 851968, 0, 9, 851988, 0, 65545, 851993, 0, 65544, 851995, 0, 65544, 851999, 0, 0, 852123, 0, 0, 852134, 0, 0, 983039, 0, 0, 917530, 0, 65536, 917531, 0, 0, 917534, 0, 196617, 917535, 0, 0, 917659, 0, 0, 917670, 0, 0, 1048575, 0, 0, 983040, 0, 0, 983041, 0, 0, 983042, 0, 0, 983043, 0, 0, 983044, 0, 0, 983056, 0, 0, 983057, 0, 0, 983058, 0, 0, 983059, 0, 0, 983060, 0, 0, 983061, 0, 0, 983062, 0, 0, 983063, 0, 0, 983064, 0, 0, 983065, 0, 0, 983066, 0, 0, 983067, 0, 0, 983068, 0, 0, 983069, 0, 0, 983070, 0, 0, 983071, 0, 0, 983130, 0, 0, 983131, 0, 0, 983132, 0, 0, 983133, 0, 0, 983134, 0, 0, 983135, 0, 0, 983136, 0, 0, 983137, 0, 0, 983138, 0, 0, 983139, 0, 0, 983140, 0, 0, 983141, 0, 0, 983142, 0, 0, 983143, 0, 0, 983144, 0, 0, 983145, 0, 0, 983146, 0, 0, 983147, 0, 0, 983151, 0, 0, 983152, 0, 0, 983153, 0, 0, 983154, 0, 0, 983158, 0, 0, 983159, 0, 0, 983160, 0, 0, 983161, 0, 0, 983165, 0, 0, 983166, 0, 0, 983167, 0, 0, 983168, 0, 0, 983172, 0, 0, 983173, 0, 0, 983174, 0, 0, 983175, 0, 0, 983179, 0, 0, 983180, 0, 0, 983181, 0, 0, 983182, 0, 0, 983183, 0, 0, 983184, 0, 0, 983185, 0, 0, 983186, 0, 0, 983187, 0, 0, 983188, 0, 0, 983189, 0, 0, 983190, 0, 0, 983191, 0, 0, 983192, 0, 0, 983193, 0, 0, 983194, 0, 0, 983195, 0, 0, 983196, 0, 0, 983197, 0, 0, 983198, 0, 0, 983199, 0, 0, 983200, 0, 0, 983201, 0, 0, 983202, 0, 0, 983203, 0, 0, 983204, 0, 0, 983205, 0, 0, 983206, 0, 0, 1048580, 0, 0, 1048581, 0, 9, 1048591, 0, 9, 1048592, 0, 0, 1048683, 0, 0, 1048687, 0, 0, 1048690, 0, 0, 1048694, 0, 0, 1048697, 0, 0, 1048701, 0, 0, 1048704, 0, 0, 1048708, 0, 0, 1048711, 0, 0, 1048715, 0, 0, 1114116, 0, 0, 1114128, 0, 0, 1114219, 0, 0, 1114223, 0, 0, 1114226, 0, 0, 1114227, 0, 0, 1114229, 0, 0, 1114230, 0, 0, 1114233, 0, 0, 1114234, 0, 0, 1114236, 0, 0, 1114237, 0, 0, 1114240, 0, 0, 1114244, 0, 0, 1114247, 0, 0, 1114251, 0, 0, 1179652, 0, 0, 1179653, 0, 9, 1179654, 0, 9, 1179662, 0, 9, 1179663, 0, 9, 1179664, 0, 0, 1179755, 0, 0, 1179756, 0, 0, 1179758, 0, 0, 1179759, 0, 0, 1179762, 0, 0, 1179766, 0, 0, 1179769, 0, 0, 1179773, 0, 0, 1179776, 0, 0, 1179777, 0, 0, 1179779, 0, 0, 1179780, 0, 0, 1179783, 0, 0, 1179784, 0, 0, 1179786, 0, 0, 1179787, 0, 0, 1245188, 0, 0, 1245200, 0, 0, 1245291, 0, 0, 1245295, 0, 0, 1245298, 0, 0, 1245302, 0, 0, 1245305, 0, 0, 1245309, 0, 0, 1245312, 0, 0, 1245316, 0, 0, 1245319, 0, 0, 1245323, 0, 0, 1310724, 0, 0, 1310725, 0, 0, 1310726, 0, 0, 1310727, 0, 0, 1310728, 0, 0, 1310729, 0, 0, 1310730, 0, 0, 1310731, 0, 0, 1310732, 0, 0, 1310733, 0, 0, 1310734, 0, 0, 1310735, 0, 0, 1310736, 0, 0, 1310827, 0, 0, 1310831, 0, 0, 1310834, 0, 0, 1310838, 0, 0, 1310841, 0, 0, 1310845, 0, 0, 1310848, 0, 0, 1310852, 0, 0, 1310855, 0, 0, 1310859, 0, 0, 1376363, 0, 0, 1376367, 0, 0, 1376370, 0, 0, 1376374, 0, 0, 1376377, 0, 0, 1376381, 0, 0, 1376384, 0, 0, 1376388, 0, 0, 1376391, 0, 0, 1376395, 0, 0, 1441899, 0, 0, 1441903, 0, 0, 1441906, 0, 0, 1441910, 0, 0, 1441913, 0, 0, 1441917, 0, 0, 1441920, 0, 0, 1441924, 0, 0, 1441927, 0, 0, 1441931, 0, 0, 1507435, 0, 0, 1507436, 0, 0, 1507437, 0, 0, 1507438, 0, 0, 1507439, 0, 0, 1507442, 0, 0, 1507443, 0, 0, 1507444, 0, 0, 1507445, 0, 0, 1507446, 0, 0, 1507449, 0, 0, 1507450, 0, 0, 1507451, 0, 0, 1507452, 0, 0, 1507453, 0, 0, 1507456, 0, 0, 1507457, 0, 0, 1507458, 0, 0, 1507459, 0, 0, 1507460, 0, 0, 1507463, 0, 0, 1507464, 0, 0, 1507465, 0, 0, 1507466, 0, 0, 1507467, 0, 0, 2097224, 0, 0, 2097258, 0, 0, 2162760, 0, 0, 2162794, 0, 0, 2228296, 0, 0, 2228330, 0, 0, 2293832, 0, 0, 2293866, 0, 0, 2359368, 0, 0, 2359402, 0, 0, 2424904, 0, 0, 2424938, 0, 0, 2490440, 0, 0, 2490474, 0, 0, 2555976, 0, 0, 2556010, 0, 0, 2621512, 0, 0, 2621546, 0, 0, 2687048, 0, 0, 2687082, 0, 0, 2752584, 0, 0, 2752618, 0, 0, 2818120, 0, 0, 2818154, 0, 0, 2883656, 0, 0, 2883690, 0, 0, 2949192, 0, 0, 2949226, 0, 0, 3014728, 0, 0, 3014762, 0, 0, 3080264, 0, 0, 3080298, 0, 0, 3145800, 0, 0, 3145834, 0, 0, 3211336, 0, 0, 3211337, 0, 0, 3211338, 0, 0, 3211339, 0, 0, 3211340, 0, 0, 3211341, 0, 0, 3211342, 0, 0, 3211343, 0, 0, 3211344, 0, 0, 3211345, 0, 0, 3211346, 0, 0, 3211347, 0, 0, 3211348, 0, 0, 3211349, 0, 0, 3211350, 0, 0, 3211351, 0, 0, 3211352, 0, 0, 3211353, 0, 0, 3211354, 0, 0, 3211355, 0, 0, 3211356, 0, 0, 3211357, 0, 0, 3211358, 0, 0, 3211359, 0, 0, 3211360, 0, 0, 3211361, 0, 0, 3211362, 0, 0, 3211363, 0, 0, 3211364, 0, 0, 3211365, 0, 0, 3211366, 0, 0, 3211367, 0, 0, 3211368, 0, 0, 3211369, 0, 0, 3211370, 0, 0 )

[node name="Label" type="Label" parent="."]
visible = false
margin_left = -1992.0
margin_top = -200.0
margin_right = -1656.0
margin_bottom = 7.0
custom_fonts/font = SubResource( 52 )
text = "Welcome to Lost Signal !
You can control your character only when it is linked to an emmiter.
Be careful not to lose signal!"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label2" type="Label" parent="."]
visible = false
margin_left = -1464.0
margin_top = -392.0
margin_right = -1024.0
margin_bottom = -115.0
custom_fonts/font = SubResource( 52 )
text = "Use enter to record a sequence of actions. Use enter again to stop recording. This sequence will be executed automatically when you lose signal!

Use this to go through the tunnel below you."
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label4" type="Label" parent="."]
visible = false
margin_left = 352.0
margin_top = -56.0
margin_right = 600.0
margin_bottom = 116.0
custom_fonts/font = SubResource( 52 )
text = "Nice! If you press enter again, you can add some new actions to your sequence."
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label5" type="Label" parent="."]
visible = false
margin_left = 1184.0
margin_top = 80.0
margin_right = 1336.0
margin_bottom = 357.0
custom_fonts/font = SubResource( 52 )
text = "You only have 8 seconds of memory. Use \"backspace\" to empty your memory."
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label6" type="Label" parent="."]
visible = false
margin_left = 1592.0
margin_top = 568.0
margin_right = 1744.0
margin_bottom = 824.0
custom_fonts/font = SubResource( 52 )
text = "Press r to start again if you are stuck"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label3" type="Label" parent="."]
visible = false
margin_left = 5008.0
margin_top = -696.0
margin_right = 5344.0
margin_bottom = -454.0
custom_fonts/font = SubResource( 52 )
text = "WELL DONE!

You made it through the level.

Now you can try to go back"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StoryTelling" parent="." instance=ExtResource( 2 )]
position = Vector2( -3328, 256 )

[node name="CollisionShape2D" parent="StoryTelling" index="0"]
position = Vector2( 64, -8 )

[node name="Story" parent="StoryTelling" index="1"]
stream = ExtResource( 1 )

[node name="StoryTelling3" parent="." instance=ExtResource( 2 )]
position = Vector2( -1320, -200 )

[node name="CollisionShape2D" parent="StoryTelling3" index="0"]
position = Vector2( 248, -32 )

[node name="Story" parent="StoryTelling3" index="1"]
stream = ExtResource( 4 )

[node name="StoryTelling2" parent="." instance=ExtResource( 2 )]
position = Vector2( -2088, 152 )

[node name="Story" parent="StoryTelling2" index="1"]
stream = ExtResource( 3 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.5, 0.5 )
motion_mirroring = Vector2( 1500, 1020 )
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="Sprite" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
texture = ExtResource( 7 )
centered = false

[node name="TileMap" type="TileMap" parent="ParallaxBackground/ParallaxLayer"]
scale = Vector2( 3, 3 )
tile_set = SubResource( 53 )
cell_size = Vector2( 16, 16 )
cell_custom_transform = Transform2D( 0, 0, 0, 0, 0, 0 )
format = 1
tile_data = PoolIntArray( 720944, 11, 0 )

[node name="ParallaxLayer2" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.5, 0.5 )

[node name="StoryTelling4" parent="." instance=ExtResource( 2 )]
position = Vector2( 504, 696 )

[node name="Checkpoint" parent="." instance=ExtResource( 8 )]
position = Vector2( 504, 696 )

[node name="Checkpoint2" parent="." instance=ExtResource( 8 )]
position = Vector2( -3288, -312 )

[node name="Checkpoint3" parent="." instance=ExtResource( 8 )]
position = Vector2( 2040, 72 )

[node name="Checkpoint4" parent="." instance=ExtResource( 8 )]
position = Vector2( 4488, -360 )

[node name="Checkpoint5" parent="." instance=ExtResource( 8 )]
position = Vector2( 7320, 408 )

[node name="CheckpointArea" parent="Checkpoint5" index="1"]
position = Vector2( 232, 248 )

[node name="AnimationPlayer" parent="Checkpoint5/Sprites" index="5"]
anims/furnish = SubResource( 54 )

[node name="Checkpoint6" parent="." instance=ExtResource( 8 )]
position = Vector2( 4096, 1896 )

[node name="StoryTelling7" parent="." instance=ExtResource( 2 )]
position = Vector2( 4192, 2248 )

[node name="CollisionShape2D" parent="StoryTelling7" index="0"]
scale = Vector2( 10, 1 )

[node name="Story" parent="StoryTelling7" index="1"]
stream = ExtResource( 14 )

[node name="StoryTelling6" parent="." instance=ExtResource( 2 )]
position = Vector2( 4416, 616 )

[node name="Story" parent="StoryTelling6" index="1"]
stream = ExtResource( 13 )

[node name="StoryTelling5" parent="." instance=ExtResource( 2 )]
position = Vector2( 3728, 768 )

[node name="CollisionShape2D" parent="StoryTelling5" index="0"]
position = Vector2( 3768, -96 )

[node name="Story" parent="StoryTelling5" index="1"]
stream = ExtResource( 12 )

[node name="StoryTelling8" parent="." instance=ExtResource( 2 )]
position = Vector2( 2536, 8 )

[node name="CollisionShape2D" parent="StoryTelling8" index="0"]
position = Vector2( 168, 24 )

[node name="Story" parent="StoryTelling8" index="1"]
stream = ExtResource( 17 )

[node name="StoryTelling9" parent="." instance=ExtResource( 2 )]
position = Vector2( 4664, -200 )

[node name="Story" parent="StoryTelling9" index="1"]
stream = ExtResource( 15 )

[node name="StoryTelling10" parent="." instance=ExtResource( 2 )]
position = Vector2( 776, 688 )

[node name="Story" parent="StoryTelling10" index="1"]
stream = ExtResource( 16 )

[node name="PlayerSprite" parent="." instance=ExtResource( 18 )]
position = Vector2( 3496, -16 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite2" parent="." instance=ExtResource( 18 )]
position = Vector2( 3152, -24 )
activated = true
fromPlayer = false

[node name="PlayerSprite3" parent="." instance=ExtResource( 18 )]
position = Vector2( 3800, -24 )
activated = true
fromPlayer = false

[node name="PlayerSprite4" parent="." instance=ExtResource( 18 )]
position = Vector2( 5664, -208 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite5" parent="." instance=ExtResource( 18 )]
position = Vector2( 6728, -160 )
activated = true
fromPlayer = false

[node name="PlayerSprite6" parent="." instance=ExtResource( 18 )]
position = Vector2( 6136, -200 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite7" parent="." instance=ExtResource( 18 )]
position = Vector2( 7648, 360 )
activated = true
fromPlayer = false

[node name="PlayerSprite8" parent="." instance=ExtResource( 18 )]
position = Vector2( 7808, 328 )
activated = true
fromPlayer = false

[node name="PlayerSprite9" parent="." instance=ExtResource( 18 )]
position = Vector2( 7704, 272 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite10" parent="." instance=ExtResource( 18 )]
position = Vector2( 7880, 216 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite11" parent="." instance=ExtResource( 18 )]
position = Vector2( 7552, 208 )
activated = true
fromPlayer = false

[node name="PlayerSprite12" parent="." instance=ExtResource( 18 )]
position = Vector2( 6576, 800 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite13" parent="." instance=ExtResource( 18 )]
position = Vector2( 6272, 1040 )
activated = true
fromPlayer = false

[node name="PlayerSprite14" parent="." instance=ExtResource( 18 )]
position = Vector2( 6216, 1048 )
activated = true
fromPlayer = false

[node name="PlayerSprite15" parent="." instance=ExtResource( 18 )]
position = Vector2( 6240, 800 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite16" parent="." instance=ExtResource( 18 )]
position = Vector2( 5560, 1024 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite17" parent="." instance=ExtResource( 18 )]
position = Vector2( 5248, 1032 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite18" parent="." instance=ExtResource( 18 )]
position = Vector2( 4728, 2168 )
activated = true
fromPlayer = false

[node name="PlayerSprite19" parent="." instance=ExtResource( 18 )]
position = Vector2( 4496, 2224 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite20" parent="." instance=ExtResource( 18 )]
position = Vector2( 3768, 2256 )
activated = true
fromPlayer = false

[node name="PlayerSprite21" parent="." instance=ExtResource( 18 )]
position = Vector2( 3920, 2256 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite22" parent="." instance=ExtResource( 18 )]
position = Vector2( 4096, 2248 )
activated = true
fromPlayer = false

[node name="PlayerSprite23" parent="." instance=ExtResource( 18 )]
position = Vector2( 4288, 2248 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite24" parent="." instance=ExtResource( 18 )]
position = Vector2( 4904, 2240 )
activated = true
fromPlayer = false

[node name="PlayerSprite25" parent="." instance=ExtResource( 18 )]
position = Vector2( 4600, 2248 )
activated = true
fromPlayer = false

[node name="PlayerSprite26" parent="." instance=ExtResource( 18 )]
position = Vector2( 3640, 2256 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="PlayerSprite27" parent="." instance=ExtResource( 18 )]
position = Vector2( 3560, 2256 )
scale = Vector2( -2.5, 2.5 )
activated = true
fromPlayer = false

[node name="Label7" type="Label" parent="."]
margin_left = -1344.0
margin_top = 48.0
margin_right = -1154.0
margin_bottom = 87.0
custom_fonts/font = SubResource( 55 )
text = "Hold Shift to record
Press Q to discard memory"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="StoryTelling11" parent="." instance=ExtResource( 2 )]
position = Vector2( -752, 136 )

[node name="Story" parent="StoryTelling11" index="1"]
stream = ExtResource( 19 )

[node name="StoryTelling12" parent="." instance=ExtResource( 2 )]
position = Vector2( 936, 264 )

[node name="Story" parent="StoryTelling12" index="1"]
stream = ExtResource( 20 )
[connection signal="activated_checkpoint" from="Player" to="CanvasLayer/UI" method="_on_Player_activated_checkpoint"]
[connection signal="out_of_memory" from="Player" to="CanvasLayer/UI" method="_on_Player_out_of_memory"]
[connection signal="play_time_changed" from="Player" to="CanvasLayer/UI" method="_on_Player_play_time_changed"]
[connection signal="record_time_changed" from="Player" to="CanvasLayer/UI" method="_on_Player_record_time_changed"]
[connection signal="recover_signal" from="Player" to="CanvasLayer/UI" method="_on_Player_recover_signal"]

[editable path="StoryTelling"]

[editable path="StoryTelling3"]

[editable path="StoryTelling2"]

[editable path="StoryTelling4"]

[editable path="Checkpoint5"]

[editable path="StoryTelling7"]

[editable path="StoryTelling6"]

[editable path="StoryTelling5"]

[editable path="StoryTelling8"]

[editable path="StoryTelling9"]

[editable path="StoryTelling10"]

[editable path="StoryTelling11"]

[editable path="StoryTelling12"]
